{
    "sourceFile": "src/main/java/com/skillswap/skillswap_core/entity/TipoUsuario.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1718219433582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1718219433582,
            "name": "Commit-0",
            "content": "package com.skillswap.skillswap_core.entity;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.Data;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonIgnore;\r\n\r\n@Entity\r\n@Table(name = \"tipoUsuario\")\r\n@Data\r\npublic class TipoUsuario {\r\n\r\n    @Id\r\n    @GeneratedValue(strategy =  GenerationType.IDENTITY)\r\n    private Integer tipoUsuarioID;\r\n    private String descripcion;\r\n\r\n\r\n    //Si queremos que se realize una elminiacion por cascada usamos esto\r\n    //@OneToMany(mappedBy = \"obj_tipoUsuario\",cascade =CascadeType.ALL,orphanRemoval = true )\r\n    @JsonIgnore\r\n    @OneToMany(mappedBy = \"obj_tipoUsuario\")\r\n    private List<Usuario>  usuarios = new ArrayList<>();\r\n    //SI NO QUEREMOS ESO\r\n    /*\r\n    *   Lo dejamos asi , pero tendremos que desvicunlarlo automatica mente\r\n    *\r\n    *   La diferencia es que si usamos cascada , eliminara todas las entidades asociadas,\r\n    *  si quitamos la cascada , no lo elmiinara pero podra generar error por la vinculacion de la FK , entonces\r\n    *  tendremos que desvincularlo automaticamente -> ver service.\r\n    * */\r\n\r\n}\r\n"
        }
    ]
}