{
    "sourceFile": "src/main/java/com/skillswap/skillswap_core/service/ChatUsuarioService.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1719762717256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719762726896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n \r\n import org.springframework.stereotype.Service;\r\n \r\n import com.skillswap.skillswap_core.entity.ChatUsuario;\r\n+import com.skillswap.skillswap_core.entity.Notificaciones;\r\n+import com.skillswap.skillswap_core.entity.Usuario;\r\n import com.skillswap.skillswap_core.repository.IChatUsuarioRepository;\r\n \r\n import lombok.AllArgsConstructor;\r\n \r\n@@ -48,7 +50,9 @@\n         chatUsuario.setChatUsuarioId(ultimoId());\r\n         return chatUsuario;\r\n     }\r\n \r\n+    public List<Notificaciones> findByUsuario(Usuario usuario) {\r\n+        return renot.findByUsuario(usuario);\r\n+    }\r\n \r\n-    \r\n }\r\n"
                },
                {
                    "date": 1719762733908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         chatUsuario.setChatUsuarioId(ultimoId());\r\n         return chatUsuario;\r\n     }\r\n \r\n-    public List<Notificaciones> findByUsuario(Usuario usuario) {\r\n+    public Chat> findByUsuario(Usuario usuario) {\r\n         return renot.findByUsuario(usuario);\r\n     }\r\n \r\n }\r\n"
                },
                {
                    "date": 1719762772231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,8 @@\n         return chatUsuario;\r\n     }\r\n \r\n     public ChatUsuario findByUsuario(Usuario usuario) {\r\n-        return renot.findByUsuario(usuario);\r\n+        return rechus.findByUsuario(usuario);\r\n     }\r\n \r\n }\r\n"
                },
                {
                    "date": 1719768065722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         chatUsuario.setChatUsuarioId(ultimoId());\r\n         return chatUsuario;\r\n     }\r\n \r\n-    public ChatUsuario findByUsuario(Usuario usuario) {\r\n+    public ChatUsuario findByUsuarioAmigo(Usuario usuario) {\r\n         return rechus.findByUsuario(usuario);\r\n     }\r\n \r\n }\r\n"
                }
            ],
            "date": 1719762717256,
            "name": "Commit-0",
            "content": "package com.skillswap.skillswap_core.service;\r\n\r\nimport java.util.List;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.skillswap.skillswap_core.entity.ChatUsuario;\r\nimport com.skillswap.skillswap_core.repository.IChatUsuarioRepository;\r\n\r\nimport lombok.AllArgsConstructor;\r\n\r\n@Service\r\n@AllArgsConstructor\r\npublic class ChatUsuarioService {\r\n      private final IChatUsuarioRepository rechus;\r\n\r\n    public int ultimoId(){\r\n        List<ChatUsuario> lista = rechus.findAll();\r\n        if (lista.size() == 0 ) {\r\n            return 1;\r\n        }\r\n        return lista.get(lista.size()-1).getChatUsuarioId()+1 ;\r\n    }\r\n\r\n    public List<ChatUsuario> findAll(){\r\n        return rechus.findAll();\r\n    }\r\n           public ChatUsuario findById(int id){\r\n        return  rechus.findById(id).orElseThrow();\r\n    }\r\n\r\n    public ChatUsuario saveChatUsuario(ChatUsuario chatUsuario) {\r\n        if (chatUsuario.getChatUsuarioId() == null ){\r\n            chatUsuario.setChatUsuarioId(ultimoId());\r\n        }\r\n        return rechus.save(chatUsuario);\r\n    }\r\n    public void delteChatUsuarioById(Integer id) {\r\n        rechus.deleteById(id);\r\n    }\r\n    public ChatUsuario nullChatUsuario() {\r\n        ChatUsuario chatUsuario = new ChatUsuario();\r\n        chatUsuario.setChatUsuarioId(null);\r\n        return chatUsuario;\r\n    }\r\n    public ChatUsuario newChatUsuario() {\r\n        ChatUsuario chatUsuario = new ChatUsuario();\r\n        chatUsuario.setChatUsuarioId(ultimoId());\r\n        return chatUsuario;\r\n    }\r\n\r\n\r\n    \r\n}\r\n"
        }
    ]
}