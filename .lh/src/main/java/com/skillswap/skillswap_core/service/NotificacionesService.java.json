{
    "sourceFile": "src/main/java/com/skillswap/skillswap_core/service/NotificacionesService.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1719719096608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719719104018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,7 @@\n         return notificaciones;\r\n     }\r\n \r\n     public Notificaciones findByUsuario(Usuario byId) {\r\n-        // TODO Auto-generated method stub\r\n-        throw new UnsupportedOperationException(\"Unimplemented method 'findByUsuario'\");\r\n+        return reper\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1719719120181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+package com.skillswap.skillswap_core.service;\r\n+\r\n+import java.util.List;\r\n+\r\n+import org.springframework.stereotype.Service;\r\n+\r\n+import com.skillswap.skillswap_core.entity.Notificaciones;\r\n+import com.skillswap.skillswap_core.entity.Usuario;\r\n+import com.skillswap.skillswap_core.repository.INotificacionesRepository;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+\r\n+@Service\r\n+@AllArgsConstructor\r\n+public class NotificacionesService {\r\n+    private final INotificacionesRepository renot;\r\n+\r\n+    public int ultimoId(){\r\n+        List<Notificaciones> lista = renot.findAll();\r\n+        if (lista.size() == 0 ) {\r\n+            return 1;\r\n+        }\r\n+        return lista.get(lista.size()-1).getNotificacionesId()+1 ;\r\n+    }\r\n+\r\n+    public List<Notificaciones> findAll(){\r\n+        return renot.findAll();\r\n+    }\r\n+    public Notificaciones findById(int id){\r\n+        return  renot.findById(id).orElseThrow();\r\n+    }\r\n+\r\n+    public Notificaciones saveNotificaciones(Notificaciones notificaciones) {\r\n+        if (notificaciones.getNotificacionesId() == null ){\r\n+            notificaciones.setNotificacionesId(ultimoId());\r\n+        }\r\n+        return renot.save(notificaciones);\r\n+    }\r\n+    public void delteNotificacionesById(Integer id) {\r\n+        renot.deleteById(id);\r\n+    }\r\n+    public Notificaciones nullNotificaciones() {\r\n+        Notificaciones notificaciones = new Notificaciones();\r\n+        notificaciones.setNotificacionesId(null);\r\n+        return notificaciones;\r\n+    }\r\n+    public Notificaciones newNotificaciones() {\r\n+        Notificaciones notificaciones = new Notificaciones();\r\n+        notificaciones.setNotificacionesId(ultimoId());\r\n+        return notificaciones;\r\n+    }\r\n+\r\n+    public Notificaciones findByUsuario(Usuario byId) {\r\n+        return renot.findBy\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1719719127478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,8 @@\n         notificaciones.setNotificacionesId(ultimoId());\r\n         return notificaciones;\r\n     }\r\n \r\n-    public Notificaciones findByUsuario(Usuario byId) {\r\n+    public Notificaciones findByUsuario(Usuario usuario) {\r\n         return renot.findByUsuario()\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1719719540901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,8 @@\n         notificaciones.setNotificacionesId(ultimoId());\r\n         return notificaciones;\r\n     }\r\n \r\n-    public Notificaciones findByUsuario(Usuario usuario) {\r\n+    public List<Notificaciones findByUsuario(Usuario usuario) {\r\n         return renot.findByUsuario(usuario);\r\n     }\r\n }\r\n"
                }
            ],
            "date": 1719719096608,
            "name": "Commit-0",
            "content": "package com.skillswap.skillswap_core.service;\r\n\r\nimport java.util.List;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.skillswap.skillswap_core.entity.Notificaciones;\r\nimport com.skillswap.skillswap_core.entity.Usuario;\r\nimport com.skillswap.skillswap_core.repository.INotificacionesRepository;\r\n\r\nimport lombok.AllArgsConstructor;\r\n\r\n@Service\r\n@AllArgsConstructor\r\npublic class NotificacionesService {\r\n    private final INotificacionesRepository renot;\r\n\r\n    public int ultimoId(){\r\n        List<Notificaciones> lista = renot.findAll();\r\n        if (lista.size() == 0 ) {\r\n            return 1;\r\n        }\r\n        return lista.get(lista.size()-1).getNotificacionesId()+1 ;\r\n    }\r\n\r\n    public List<Notificaciones> findAll(){\r\n        return renot.findAll();\r\n    }\r\n    public Notificaciones findById(int id){\r\n        return  renot.findById(id).orElseThrow();\r\n    }\r\n\r\n    public Notificaciones saveNotificaciones(Notificaciones notificaciones) {\r\n        if (notificaciones.getNotificacionesId() == null ){\r\n            notificaciones.setNotificacionesId(ultimoId());\r\n        }\r\n        return renot.save(notificaciones);\r\n    }\r\n    public void delteNotificacionesById(Integer id) {\r\n        renot.deleteById(id);\r\n    }\r\n    public Notificaciones nullNotificaciones() {\r\n        Notificaciones notificaciones = new Notificaciones();\r\n        notificaciones.setNotificacionesId(null);\r\n        return notificaciones;\r\n    }\r\n    public Notificaciones newNotificaciones() {\r\n        Notificaciones notificaciones = new Notificaciones();\r\n        notificaciones.setNotificacionesId(ultimoId());\r\n        return notificaciones;\r\n    }\r\n\r\n    public Notificaciones findByUsuario(Usuario byId) {\r\n        // TODO Auto-generated method stub\r\n        throw new UnsupportedOperationException(\"Unimplemented method 'findByUsuario'\");\r\n    }\r\n}\r\n"
        }
    ]
}