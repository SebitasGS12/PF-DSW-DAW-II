{
    "sourceFile": "src/main/java/com/skillswap/skillswap_core/controller/MensajesController.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1719765477201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719765482291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         }\r\n     }\r\n \r\n \r\n-    @GetMapping(\"/{id}\")\r\n+    @GetMapping(\"/chat/{id}\")\r\n     public ResponseEntity<Mensajes> buscarMensaje(@PathVariable int id) {\r\n         try {\r\n             Mensajes mensajes = mensajeService.findById(id);\r\n             return ResponseEntity.ok(mensajes);\r\n"
                },
                {
                    "date": 1719765490929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     }\r\n \r\n \r\n     @GetMapping(\"/chat/{id}\")\r\n-    public ResponseEntity<Mensajes> buscarMensaje(@PathVariable int id) {\r\n+    public ResponseEntity<List<Mensajes>> buscarMensaje(@PathVariable int id) {\r\n         try {\r\n             Mensajes mensajes = mensajeService.findById(id);\r\n             return ResponseEntity.ok(mensajes);\r\n         } catch (NoSuchElementException e) {\r\n"
                },
                {
                    "date": 1719765501514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,11 +44,11 @@\n     }\r\n \r\n \r\n     @GetMapping(\"/chat/{id}\")\r\n-    public ResponseEntity<List<Mensajes>> buscarMensaje(@PathVariable int id) {\r\n+    public ResponseEntity<List<Mensajes>> buscarMensajesFromChat(@PathVariable int id) {\r\n         try {\r\n-            Mensajes mensajes = mensajeService.findById(id);\r\n+            Mensajes mensajes = mensajeService.findByChatId(id);\r\n             return ResponseEntity.ok(mensajes);\r\n         } catch (NoSuchElementException e) {\r\n             throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n         }\r\n"
                },
                {
                    "date": 1719765507970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+package com.skillswap.skillswap_core.controller;\r\n+\r\n+import java.util.List;\r\n+import java.util.NoSuchElementException;\r\n+\r\n+import org.springframework.http.HttpStatus;\r\n+import org.springframework.http.ResponseEntity;\r\n+import org.springframework.web.bind.annotation.CrossOrigin;\r\n+import org.springframework.web.bind.annotation.DeleteMapping;\r\n+import org.springframework.web.bind.annotation.GetMapping;\r\n+import org.springframework.web.bind.annotation.PathVariable;\r\n+import org.springframework.web.bind.annotation.PostMapping;\r\n+import org.springframework.web.bind.annotation.PutMapping;\r\n+import org.springframework.web.bind.annotation.RequestBody;\r\n+import org.springframework.web.bind.annotation.RequestMapping;\r\n+import org.springframework.web.bind.annotation.RestController;\r\n+\r\n+import com.skillswap.skillswap_core.constants.Estandares;\r\n+import com.skillswap.skillswap_core.entity.Mensajes;\r\n+import com.skillswap.skillswap_core.exceptions.ResourceNotFoundException;\r\n+import com.skillswap.skillswap_core.service.MensajeService;\r\n+\r\n+import lombok.RequiredArgsConstructor;\r\n+\r\n+@RestController\r\n+@RequestMapping(Estandares.API + \"Mensajes\")\r\n+@RequiredArgsConstructor\r\n+@CrossOrigin(Estandares.CROSS)\r\n+public class MensajesController {\r\n+    private final MensajeService mensajeService;\r\n+     @GetMapping\r\n+    public ResponseEntity<List<Mensajes>> listarMensaje() {\r\n+        return ResponseEntity.ok(mensajeService.findAll());\r\n+    }\r\n+    \r\n+    @GetMapping(\"/{id}\")\r\n+    public ResponseEntity<Mensajes> buscarMensaje(@PathVariable int id) {\r\n+        try {\r\n+            Mensajes mensajes = mensajeService.findById(id);\r\n+            return ResponseEntity.ok(mensajes);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    @GetMapping(\"/chat/{id}\")\r\n+    public ResponseEntity<List<Mensajes>> buscarMensajesFromChat(@PathVariable int id) {\r\n+        try {\r\n+            List<Mensajes> mensajes = mensajeService.findByChatId(id);\r\n+            return ResponseEntity.ok(mensajes);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    @PostMapping\r\n+    public ResponseEntity<Mensajes> guardarMensajes(@RequestBody Mensajes mensajes) {\r\n+        Mensajes nuevoMensaje = mensajeService.saveMensajes(mensajes);\r\n+        return new ResponseEntity<>(nuevoMensaje, HttpStatus.CREATED);\r\n+    }\r\n+    \r\n+    @PutMapping(\"/{id}\")\r\n+    public ResponseEntity<Mensajes> actualizarMensajes(@PathVariable int id, @RequestBody Mensajes newMensaje) {\r\n+        validarExistencia(id);\r\n+        newMensaje.setMensajeId(id);\r\n+        Mensajes updatedMensaje = mensajeService.saveMensajes(newMensaje);\r\n+        return ResponseEntity.ok(updatedMensaje);\r\n+    }\r\n+    \r\n+\r\n+    @DeleteMapping(\"/{id}\")\r\n+    public ResponseEntity<String> eliminarMensaje(@PathVariable int id) {\r\n+        validarExistencia(id);\r\n+        mensajeService.delteMensajesById(id);\r\n+        String msg = \"Mensaje Eliminado : \" + id;\r\n+        return ResponseEntity.ok(msg);\r\n+    }\r\n+\r\n+    private void validarExistencia(int id) {\r\n+        try {\r\n+            mensajeService.findById(id);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1719765551847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n @RequiredArgsConstructor\r\n @CrossOrigin(Estandares.CROSS)\r\n public class MensajesController {\r\n     private final MensajeService mensajeService;\r\n+    private final MensajeService mensajeService;\r\n      @GetMapping\r\n     public ResponseEntity<List<Mensajes>> listarMensaje() {\r\n         return ResponseEntity.ok(mensajeService.findAll());\r\n     }\r\n"
                },
                {
                    "date": 1719765562360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n import com.skillswap.skillswap_core.constants.Estandares;\r\n import com.skillswap.skillswap_core.entity.Chat;\r\n import com.skillswap.skillswap_core.entity.Mensajes;\r\n import com.skillswap.skillswap_core.exceptions.ResourceNotFoundException;\r\n+import com.skillswap.skillswap_core.service.ChatService;\r\n import com.skillswap.skillswap_core.service.MensajeService;\r\n \r\n import lombok.RequiredArgsConstructor;\r\n \r\n@@ -28,9 +29,9 @@\n @RequiredArgsConstructor\r\n @CrossOrigin(Estandares.CROSS)\r\n public class MensajesController {\r\n     private final MensajeService mensajeService;\r\n-    private final Chat mensajeService;\r\n+    private final ChatService chatService;\r\n      @GetMapping\r\n     public ResponseEntity<List<Mensajes>> listarMensaje() {\r\n         return ResponseEntity.ok(mensajeService.findAll());\r\n     }\r\n"
                },
                {
                    "date": 1719765568091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \r\n     @GetMapping(\"/chat/{id}\")\r\n     public ResponseEntity<List<Mensajes>> buscarMensajesFromChat(@PathVariable int id) {\r\n         try {\r\n-            List<Mensajes> mensajes = mensajeService.findByChatId(id);\r\n+            List<Mensajes> mensajes = mensajeService.findByChatId(chatService.);\r\n             return ResponseEntity.ok(mensajes);\r\n         } catch (NoSuchElementException e) {\r\n             throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n         }\r\n"
                }
            ],
            "date": 1719765477201,
            "name": "Commit-0",
            "content": "package com.skillswap.skillswap_core.controller;\r\n\r\nimport java.util.List;\r\nimport java.util.NoSuchElementException;\r\n\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.CrossOrigin;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.PutMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.skillswap.skillswap_core.constants.Estandares;\r\nimport com.skillswap.skillswap_core.entity.Mensajes;\r\nimport com.skillswap.skillswap_core.exceptions.ResourceNotFoundException;\r\nimport com.skillswap.skillswap_core.service.MensajeService;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\n\r\n@RestController\r\n@RequestMapping(Estandares.API + \"Mensajes\")\r\n@RequiredArgsConstructor\r\n@CrossOrigin(Estandares.CROSS)\r\npublic class MensajesController {\r\n    private final MensajeService mensajeService;\r\n     @GetMapping\r\n    public ResponseEntity<List<Mensajes>> listarMensaje() {\r\n        return ResponseEntity.ok(mensajeService.findAll());\r\n    }\r\n    \r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<Mensajes> buscarMensaje(@PathVariable int id) {\r\n        try {\r\n            Mensajes mensajes = mensajeService.findById(id);\r\n            return ResponseEntity.ok(mensajes);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<Mensajes> buscarMensaje(@PathVariable int id) {\r\n        try {\r\n            Mensajes mensajes = mensajeService.findById(id);\r\n            return ResponseEntity.ok(mensajes);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n\r\n\r\n    @PostMapping\r\n    public ResponseEntity<Mensajes> guardarMensajes(@RequestBody Mensajes mensajes) {\r\n        Mensajes nuevoMensaje = mensajeService.saveMensajes(mensajes);\r\n        return new ResponseEntity<>(nuevoMensaje, HttpStatus.CREATED);\r\n    }\r\n    \r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<Mensajes> actualizarMensajes(@PathVariable int id, @RequestBody Mensajes newMensaje) {\r\n        validarExistencia(id);\r\n        newMensaje.setMensajeId(id);\r\n        Mensajes updatedMensaje = mensajeService.saveMensajes(newMensaje);\r\n        return ResponseEntity.ok(updatedMensaje);\r\n    }\r\n    \r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<String> eliminarMensaje(@PathVariable int id) {\r\n        validarExistencia(id);\r\n        mensajeService.delteMensajesById(id);\r\n        String msg = \"Mensaje Eliminado : \" + id;\r\n        return ResponseEntity.ok(msg);\r\n    }\r\n\r\n    private void validarExistencia(int id) {\r\n        try {\r\n            mensajeService.findById(id);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}