{
    "sourceFile": "src/main/java/com/skillswap/skillswap_core/controller/HabilidadController.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1719011450989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719011457149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n         }\r\n     }\r\n \r\n-    @GetMapping(\"/{id}\")\r\n+    @GetMapping(\"//{id}\")\r\n     public ResponseEntity<Habilidad> buscar(@PathVariable int id) {\r\n         try {\r\n             Habilidad habilidad = service.findById(id);\r\n             return ResponseEntity.ok(habilidad);\r\n"
                },
                {
                    "date": 1719011463788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         }\r\n     }\r\n \r\n     @GetMapping(\"/categoria/{id}\")\r\n-    public ResponseEntity<Habilidad> buscar(@PathVariable int id) {\r\n+    public ResponseEntity<List<Habilidad>> buscar(@PathVariable int id) {\r\n         try {\r\n             Habilidad habilidad = service.findById(id);\r\n             return ResponseEntity.ok(habilidad);\r\n         } catch (NoSuchElementException e) {\r\n"
                },
                {
                    "date": 1719011490863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+package com.skillswap.skillswap_core.controller;\r\n+\r\n+import com.skillswap.skillswap_core.constants.Estandares;\r\n+import com.skillswap.skillswap_core.entity.CategoriaHabilidad;\r\n+import com.skillswap.skillswap_core.entity.Habilidad;\r\n+import com.skillswap.skillswap_core.exceptions.ResourceNotFoundException;\r\n+import com.skillswap.skillswap_core.service.HabilidadService;\r\n+import lombok.RequiredArgsConstructor;\r\n+import org.springframework.http.HttpStatus;\r\n+import org.springframework.http.ResponseEntity;\r\n+import org.springframework.web.bind.annotation.*;\r\n+\r\n+import java.util.List;\r\n+import java.util.NoSuchElementException;\r\n+\r\n+@RestController\r\n+@RequestMapping(Estandares.API + \"Habilidad\")\r\n+@RequiredArgsConstructor\r\n+@CrossOrigin(Estandares.CROSS)\r\n+public class HabilidadController {\r\n+\r\n+    private final HabilidadService service;\r\n+\r\n+    @GetMapping\r\n+    public ResponseEntity<List<Habilidad>> listar() {\r\n+        return ResponseEntity.ok(service.findAll());\r\n+    }\r\n+\r\n+    @GetMapping(\"/{id}\")\r\n+    public ResponseEntity<Habilidad> buscar(@PathVariable int id) {\r\n+        try {\r\n+            Habilidad habilidad = service.findById(id);\r\n+            return ResponseEntity.ok(habilidad);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+\r\n+    @GetMapping(\"/categoria/{id}\")\r\n+    public ResponseEntity<List<Habilidad>> buscarPorCategoriaId(@PathVariable int id) {\r\n+        try {\r\n+            Habilidad habilidad = service.findById(id);\r\n+            return ResponseEntity.ok(habilidad);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    @PostMapping\r\n+    public ResponseEntity<Habilidad> guardar(@RequestBody Habilidad habilidad) {\r\n+        Habilidad nuevo = service.saveHabilidad(habilidad);\r\n+        return new ResponseEntity<>(nuevo, HttpStatus.CREATED);\r\n+    }\r\n+\r\n+    @PutMapping(\"/{id}\")\r\n+    public ResponseEntity<Habilidad> actualizar(@PathVariable int id, @RequestBody Habilidad habilidad) {\r\n+        validarExistencia(id);\r\n+        habilidad.setHabilidadId(id);\r\n+        Habilidad update = service.saveHabilidad(habilidad);\r\n+        return ResponseEntity.ok(update);\r\n+    }\r\n+\r\n+    @DeleteMapping(\"/{id}\")\r\n+    public ResponseEntity<String> eliminar(@PathVariable int id) {\r\n+        validarExistencia(id);\r\n+        service.delteHabilidadById(id);\r\n+        String msg = \"Habilidad Eliminada : \" + id;\r\n+        return ResponseEntity.ok(msg);\r\n+    }\r\n+\r\n+    private void validarExistencia(int id) {\r\n+        try {\r\n+            service.findById(id);\r\n+        } catch (NoSuchElementException e) {\r\n+            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n+        }\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1719011450989,
            "name": "Commit-0",
            "content": "package com.skillswap.skillswap_core.controller;\r\n\r\nimport com.skillswap.skillswap_core.constants.Estandares;\r\nimport com.skillswap.skillswap_core.entity.CategoriaHabilidad;\r\nimport com.skillswap.skillswap_core.entity.Habilidad;\r\nimport com.skillswap.skillswap_core.exceptions.ResourceNotFoundException;\r\nimport com.skillswap.skillswap_core.service.HabilidadService;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\nimport java.util.NoSuchElementException;\r\n\r\n@RestController\r\n@RequestMapping(Estandares.API + \"Habilidad\")\r\n@RequiredArgsConstructor\r\n@CrossOrigin(Estandares.CROSS)\r\npublic class HabilidadController {\r\n\r\n    private final HabilidadService service;\r\n\r\n    @GetMapping\r\n    public ResponseEntity<List<Habilidad>> listar() {\r\n        return ResponseEntity.ok(service.findAll());\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<Habilidad> buscar(@PathVariable int id) {\r\n        try {\r\n            Habilidad habilidad = service.findById(id);\r\n            return ResponseEntity.ok(habilidad);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<Habilidad> buscar(@PathVariable int id) {\r\n        try {\r\n            Habilidad habilidad = service.findById(id);\r\n            return ResponseEntity.ok(habilidad);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n\r\n\r\n    @PostMapping\r\n    public ResponseEntity<Habilidad> guardar(@RequestBody Habilidad habilidad) {\r\n        Habilidad nuevo = service.saveHabilidad(habilidad);\r\n        return new ResponseEntity<>(nuevo, HttpStatus.CREATED);\r\n    }\r\n\r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<Habilidad> actualizar(@PathVariable int id, @RequestBody Habilidad habilidad) {\r\n        validarExistencia(id);\r\n        habilidad.setHabilidadId(id);\r\n        Habilidad update = service.saveHabilidad(habilidad);\r\n        return ResponseEntity.ok(update);\r\n    }\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<String> eliminar(@PathVariable int id) {\r\n        validarExistencia(id);\r\n        service.delteHabilidadById(id);\r\n        String msg = \"Habilidad Eliminada : \" + id;\r\n        return ResponseEntity.ok(msg);\r\n    }\r\n\r\n    private void validarExistencia(int id) {\r\n        try {\r\n            service.findById(id);\r\n        } catch (NoSuchElementException e) {\r\n            throw new ResourceNotFoundException(\"Objeto con id : \" + id);\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}